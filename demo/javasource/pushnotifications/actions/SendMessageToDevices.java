// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package pushnotifications.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import pushnotifications.proxies.Message;
import java.util.ArrayList;
import java.util.List;
import static pushnotifications.proxies.microflows.Microflows.createAndSendMessageToDevices;

/**
 * Java action to use instead of microflow 'SendMessageImmediately'
 * Parameters: 
 * Device: Android or iOS
 * MessageText: the contents of the message
 * Title: The title of the message
 * Badge: a number that appears on the app icon (iOS)
 * LaunchImage: file name of the launch image (iOS)
 * Sound: name of system sound to play (iOS)
 * 
 */
public class SendMessageToDevices extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private IMendixObject __MessageData;
	private pushnotifications.proxies.MessageData MessageData;
	private java.util.List<IMendixObject> __Devices;
	private java.util.List<pushnotifications.proxies.Device> Devices;

	public SendMessageToDevices(IContext context, IMendixObject MessageData, java.util.List<IMendixObject> Devices)
	{
		super(context);
		this.__MessageData = MessageData;
		this.__Devices = Devices;
	}

	@Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		this.MessageData = __MessageData == null ? null : pushnotifications.proxies.MessageData.initialize(getContext(), __MessageData);

		this.Devices = new java.util.ArrayList<pushnotifications.proxies.Device>();
		if (__Devices != null)
			for (IMendixObject __DevicesElement : __Devices)
				this.Devices.add(pushnotifications.proxies.Device.initialize(getContext(), __DevicesElement));

		// BEGIN USER CODE
		List<Message> messages = createAndSendMessageToDevices(getContext(), Devices, MessageData);
		List<IMendixObject> objects = new ArrayList<>();
		messages.forEach(message -> {
            objects.add(message.getMendixObject());
		});
		return objects;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "SendMessageToDevices";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
